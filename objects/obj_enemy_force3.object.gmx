<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite41</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp = 50
shooting = false
alarm[0] = 5
alarm[1] = 100


rotate = false
rotspeed = 5
radius = 300
angle = 300

shoot_speed = 10
shoot_accuracy = 3 //must be greater than 3 or wont shoot (the smaller the more accurate)

detectrange = 10000
target = obj_player_ship
fallbacktarget = obj_enemy_factory
bullet_type = obj_bullet_fast2
missle_type = obj_enemy_missle

maxspeed = 8
turnspeed = 5
acc = 0.4
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(irandom(room_width),irandom(room_height),obj_enemy_force3)
instance_create(irandom(room_width),irandom(room_height),obj_enemy_force3)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shooting)
{
    inst = instance_create(x,y,missle_type)

    inst.direction = direction
    inst.image_angle = image_angle
}

alarm[1] = 100
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shooting)
{
    inst = instance_create(x,y,bullet_type)

    inst.direction = direction
    inst.image_angle = image_angle
}

alarm[0] = shoot_speed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(target))
{
    if (distance_to_object(target) &lt; detectrange)
    {
        rotate = false
        inst = instance_nearest(x,y,target)
        point = point_direction(x,y,inst.x,inst.y)
        if (direction &gt; point - shoot_accuracy &amp;&amp; direction &lt; point + shoot_accuracy)
        {
            shooting = true
            motion_add(direction,acc)
        } else if (direction &gt; point)
        {
            shooting = false
            direction-=turnspeed
            image_angle-=turnspeed
            motion_add(direction,acc)
        } else if (direction &lt; point)
        {
            shooting = false
            direction+=turnspeed
            image_angle+=turnspeed
            motion_add(direction,acc)
        }
    } else 
    {
        shooting = false
        if (!instance_exists(fallbacktarget)) return 0;
        centrex = fallbacktarget.x
        centrey = fallbacktarget.y
        if (rotate)
        {
            image_angle = angle + 90
            direction = angle + 90
        
            angle += rotspeed
            angle = angle mod 360
        
        
            if (angle &lt; 0) angle += 360
        
            x = centrex + lengthdir_x(radius, angle)
            y = centrey + lengthdir_y(radius, angle)
        } else 
        {
            xpnt = centrex+lengthdir_x(radius, angle)
            ypnt = centrey+lengthdir_y(radius, angle)
            if (distance_to_point(xpnt,ypnt) &lt; 3) rotate = true;
            motion_add(direction,acc)
            direction = point_direction(x,y,xpnt,ypnt)
            image_angle = point_direction(x,y,xpnt,ypnt)
        }
    }
} else 
{
    shooting = false
}

speed = max(speed - 0.3,0)
if (speed &lt; 0) speed = 0
if (speed &gt; maxspeed) speed = maxspeed
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
