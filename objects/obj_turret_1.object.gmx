<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_turret_1_new</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>angle = 120
radius = 50
turningleft = false
target = obj_enemy_basic
turnspeed = 1
detectrange = 200
findrange = 10
shooting = false
shootcounter = 0
shootreloadcounter = 0
shootdelay = 5
shootburstamount = 3
shootreloaddelay = -100
bullettype = obj_base_bullet
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(target)){
  if (distance_to_object(target) &lt; detectrange){
    inst = instance_nearest(x,y,target)
    thedirection = point_direction(x,y,inst.x,inst.y)
    
    if (direction &gt; thedirection - findrange &amp;&amp; direction &lt; thedirection + findrange){
      shooting = true
    } else if (direction &gt; thedirection){
      shooting = false
      direction-=turnspeed
      image_angle-=turnspeed
    } else if (direction &lt; thedirection){
      shooting = false
      direction+=turnspeed
      image_angle+=turnspeed
    }
  } else {
    if (direction &gt; obj_ship_1.direction - findrange &amp;&amp; direction &lt; obj_ship_1.direction + findrange){
      shooting = false
    } else if (direction &gt; obj_ship_1.direction){
      shooting = false
      direction-=turnspeed
      image_angle-=turnspeed
    } else if (direction &lt; obj_ship_1.direction){
      shooting = false
      direction+=turnspeed
      image_angle+=turnspeed
    }
  }
}

if (shooting){
  shootcounter++
  if (shootcounter &gt; shootdelay){
    shootcounter = 0
    shootreloadcounter++
    if (shootreloadcounter &gt; shootburstamount){
      shootcounter = shootreloaddelay
      shootreloadcounter = 0
    }
    bullet1 = instance_create(x,y,bullettype)
    bullet1.direction = direction
    bullet1.image_angle = image_angle
    with(bullet1){
      motion_add(direction,bulletspeed)
    }
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
