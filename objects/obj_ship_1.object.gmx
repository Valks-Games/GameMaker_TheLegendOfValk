<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ship_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init vars

image_speed = 0
image_index = 0
speed = 0
maxspeed = 1
acc = 0.01
fric = 0.01
turnspeed = 0
maxturnspeed = 0.6
turnspeedacc = 0.05
turningleft = false
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init addons

shield = instance_create(x,y,obj_shield)

turret1 = instance_create(x,y,obj_turret_1)
turret2 = instance_create(x,y,obj_turret_1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move around

left = max(keyboard_check(vk_left), keyboard_check(ord("A")), 0)
right = max(keyboard_check(vk_right), keyboard_check(ord("D")), 0)
up = max(keyboard_check(vk_up), keyboard_check(ord("W")), 0)
down = max(keyboard_check(vk_down), keyboard_check(ord("S")), 0)

if left {
  turningleft = true
  turnspeed+=turnspeedacc
}

if right {
  turningleft = false
  turnspeed+=turnspeedacc
}

if up {
  image_speed = 1
  motion_add(direction,acc)
} else {
  image_index = 0
  image_speed = 0
}
if down {
  speed = max(speed - 0.005,0)
}

if !turningleft {
  image_angle-=turnspeed
  direction-=turnspeed
}

if turningleft {
  image_angle+=turnspeed
  direction+=turnspeed
}

turnspeed = max(turnspeed - 0.005,0)
if turnspeed &lt; 0 turnspeed = 0
if turnspeed &gt; maxturnspeed turnspeed = maxturnspeed

speed = max(speed - 0.005,0)
if speed &lt; -maxspeed speed = -maxspeed
if speed &gt; maxspeed speed = maxspeed
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///addons

with(turret1){
  if (keyboard_check(ord("D"))) turningleft = false
  if (keyboard_check(ord("A"))) turningleft = true
  if (turningleft)angle+=obj_ship_1.turnspeed
  if (!turningleft)angle-=obj_ship_1.turnspeed
  x = (obj_ship_1.x) + lengthdir_x(radius,angle)
  y = (obj_ship_1.y) + lengthdir_y(radius,angle)
}

with(turret2){
  if (keyboard_check(ord("D"))) turningleft = true
  if (keyboard_check(ord("A"))) turningleft = false
  if (turningleft)angle+=obj_ship_1.turnspeed
  if (!turningleft)angle-=obj_ship_1.turnspeed
  x = (obj_ship_1.x) + lengthdir_x(radius,angle)
  y = (obj_ship_1.y) + lengthdir_y(-radius,angle)
}

with(shield){
  x = (obj_ship_1.x)
  y = (obj_ship_1.y)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///collisions


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
